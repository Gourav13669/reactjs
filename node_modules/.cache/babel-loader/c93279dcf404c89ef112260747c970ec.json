{"ast":null,"code":"var _jsxFileName = \"E:\\\\newreact\\\\learn\\\\src\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Home = props => {\n  _s();\n\n  const [num, setnum] = useState([]);\n  let {\n    id\n  } = useParams();\n\n  const Ap = async () => {\n    const url = `https://api.tvmaze.com/search/shows?q=all`;\n    const check = await fetch(url);\n    const res = await check.json();\n    setnum(res[0].score);\n    console.log(res.score);\n  };\n\n  useEffect(() => {\n    Ap();\n  }, []);\n  console.log(num);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", id, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }, this), id === 10 ? null : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"fvnkvfnkj \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Home, \"5nWQAO6DzWsmHduhUDYc21fwzOg=\", false, function () {\n  return [useParams];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["E:/newreact/learn/src/Home.jsx"],"names":["React","useEffect","useState","useParams","Home","props","num","setnum","id","Ap","url","check","fetch","res","json","score","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAyC,OAAzC;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AACA,OAAO,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAM,CAACC,GAAD,EAAOC,MAAP,IAAiBL,QAAQ,CAAC,EAAD,CAA/B;AACA,MAAI;AAAEM,IAAAA;AAAF,MAASL,SAAS,EAAtB;;AAGA,QAAMM,EAAE,GAAG,YAAW;AAEjB,UAAMC,GAAG,GAAI,2CAAb;AACD,UAAMC,KAAK,GAAG,MAAMC,KAAK,CAACF,GAAD,CAAzB;AACA,UAAMG,GAAG,GAAG,MAAMF,KAAK,CAACG,IAAN,EAAlB;AACAP,IAAAA,MAAM,CAACM,GAAG,CAAC,CAAD,CAAH,CAAOE,KAAR,CAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACE,KAAhB;AAGH,GATD;;AAUHd,EAAAA,SAAS,CAAC,MAAM;AACTQ,IAAAA,EAAE;AAEL,GAHK,EAGJ,EAHI,CAAT;AAIDO,EAAAA,OAAO,CAACC,GAAR,CAAYX,GAAZ;AAQI,sBAAQ;AAAA,4BAAE;AAAA,sBAAQE,EAAR;AAAA;AAAA;AAAA;AAAA;AAAA,YAAF,EACRA,EAAE,KAAG,EAAL,GAAU,IAAV,gBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADT,eAER;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFQ;AAAA,kBAAR;AAKH,CAhCM;;GAAMJ,I;UAEID,S;;;KAFJC,I","sourcesContent":["import React,{useEffect,useState}   from 'react';\r\nimport { useParams } from 'react-router-dom'\r\nexport const Home = (props) => {\r\n    const [num , setnum] = useState([]);\r\n    let { id } = useParams(); \r\n    \r\n   \r\n    const Ap = async() => {\r\n       \r\n         const url = `https://api.tvmaze.com/search/shows?q=all`;\r\n        const check = await fetch(url);\r\n        const res = await check.json();       \r\n        setnum(res[0].score);\r\n        console.log(res.score);\r\n  \r\n\r\n    }  \r\n useEffect(() => {\r\n        Ap();\r\n\r\n    },[])\r\nconsole.log(num);\r\n\r\n\r\n\r\n\r\n\r\n\r\n     \r\n    return (<>< h1 > {id } </h1>\r\n   {id===10 ? null : <h1>fvnkvfnkj </h1>  }\r\n    <h1>Review</h1>\r\n    </> \r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}